python detect.py --image_folder data/samples

python detect.py --image_folder data/samples

# ================================================================================
yolo v3 shape
('convolutional', (1, 32, 416, 416))
('convolutional', (1, 64, 208, 208))
('convolutional', (1, 32, 208, 208))
('convolutional', (1, 64, 208, 208))
('shortcut', (1, 64, 208, 208))
('convolutional', (1, 128, 104, 104))
('convolutional', (1, 64, 104, 104))
('convolutional', (1, 128, 104, 104))
('shortcut', (1, 128, 104, 104))
('convolutional', (1, 64, 104, 104))
('convolutional', (1, 128, 104, 104))
('shortcut', (1, 128, 104, 104))
('convolutional', (1, 256, 52, 52))
('convolutional', (1, 128, 52, 52))
('convolutional', (1, 256, 52, 52))
('shortcut', (1, 256, 52, 52))
('convolutional', (1, 128, 52, 52))
('convolutional', (1, 256, 52, 52))
('shortcut', (1, 256, 52, 52))
('convolutional', (1, 128, 52, 52))
('convolutional', (1, 256, 52, 52))
('shortcut', (1, 256, 52, 52))
('convolutional', (1, 128, 52, 52))
('convolutional', (1, 256, 52, 52))
('shortcut', (1, 256, 52, 52))
('convolutional', (1, 128, 52, 52))
('convolutional', (1, 256, 52, 52))
('shortcut', (1, 256, 52, 52))
('convolutional', (1, 128, 52, 52))
('convolutional', (1, 256, 52, 52))
('shortcut', (1, 256, 52, 52))
('convolutional', (1, 128, 52, 52))
('convolutional', (1, 256, 52, 52))
('shortcut', (1, 256, 52, 52))
('convolutional', (1, 128, 52, 52))
('convolutional', (1, 256, 52, 52))
('shortcut', (1, 256, 52, 52))
('convolutional', (1, 512, 26, 26))
('convolutional', (1, 256, 26, 26))
('convolutional', (1, 512, 26, 26))
('shortcut', (1, 512, 26, 26))
('convolutional', (1, 256, 26, 26))
('convolutional', (1, 512, 26, 26))
('shortcut', (1, 512, 26, 26))
('convolutional', (1, 256, 26, 26))
('convolutional', (1, 512, 26, 26))
('shortcut', (1, 512, 26, 26))
('convolutional', (1, 256, 26, 26))
('convolutional', (1, 512, 26, 26))
('shortcut', (1, 512, 26, 26))
('convolutional', (1, 256, 26, 26))
('convolutional', (1, 512, 26, 26))
('shortcut', (1, 512, 26, 26))
('convolutional', (1, 256, 26, 26))
('convolutional', (1, 512, 26, 26))
('shortcut', (1, 512, 26, 26))
('convolutional', (1, 256, 26, 26))
('convolutional', (1, 512, 26, 26))
('shortcut', (1, 512, 26, 26))
('convolutional', (1, 256, 26, 26))
('convolutional', (1, 512, 26, 26))
('shortcut', (1, 512, 26, 26))
('convolutional', (1, 1024, 13, 13))
('convolutional', (1, 512, 13, 13))
('convolutional', (1, 1024, 13, 13))
('shortcut', (1, 1024, 13, 13))
('convolutional', (1, 512, 13, 13))
('convolutional', (1, 1024, 13, 13))
('shortcut', (1, 1024, 13, 13))
('convolutional', (1, 512, 13, 13))
('convolutional', (1, 1024, 13, 13))
('shortcut', (1, 1024, 13, 13))
('convolutional', (1, 512, 13, 13))
('convolutional', (1, 1024, 13, 13))
('shortcut', (1, 1024, 13, 13))
('convolutional', (1, 512, 13, 13))
('convolutional', (1, 1024, 13, 13))
('convolutional', (1, 512, 13, 13))
('convolutional', (1, 1024, 13, 13))
('convolutional', (1, 512, 13, 13))
('convolutional', (1, 1024, 13, 13))
('convolutional', (1, 255, 13, 13))
('yolo', (1, 507, 85))
('route', (1, 512, 13, 13))
('convolutional', (1, 256, 13, 13))
('upsample', (1, 256, 26, 26))
('route', (1, 768, 26, 26))
('convolutional', (1, 256, 26, 26))
('convolutional', (1, 512, 26, 26))
('convolutional', (1, 256, 26, 26))
('convolutional', (1, 512, 26, 26))
('convolutional', (1, 256, 26, 26))
('convolutional', (1, 512, 26, 26))
('convolutional', (1, 255, 26, 26))
('yolo', (1, 2028, 85))
('route', (1, 256, 26, 26))
('convolutional', (1, 128, 26, 26))
('upsample', (1, 128, 52, 52))
('route', (1, 384, 52, 52))
('convolutional', (1, 128, 52, 52))
('convolutional', (1, 256, 52, 52))
('convolutional', (1, 128, 52, 52))
('convolutional', (1, 256, 52, 52))
('convolutional', (1, 128, 52, 52))
('convolutional', (1, 256, 52, 52))
('convolutional', (1, 255, 52, 52))
('yolo', (1, 8112, 85))

# ================================================================================
yolo v3-tiny shape
('convolutional', (1, 16, 416, 416))
('maxpool', (1, 16, 208, 208))
('convolutional', (1, 32, 208, 208))
('maxpool', (1, 32, 104, 104))
('convolutional', (1, 64, 104, 104))
('maxpool', (1, 64, 52, 52))
('convolutional', (1, 128, 52, 52))
('maxpool', (1, 128, 26, 26))
('convolutional', (1, 256, 26, 26))
('maxpool', (1, 256, 13, 13))
('convolutional', (1, 512, 13, 13))
('maxpool', (1, 512, 13, 13))
('convolutional', (1, 1024, 13, 13))
('convolutional', (1, 256, 13, 13))
('convolutional', (1, 512, 13, 13))
('convolutional', (1, 255, 13, 13))
('yolo', (1, 507, 85))
('route', (1, 256, 13, 13))
('convolutional', (1, 128, 13, 13))
('upsample', (1, 128, 26, 26))
('route', (1, 384, 26, 26))