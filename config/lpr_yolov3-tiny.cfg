[net]
# Testing
batch=1
subdivisions=1
# Training
# batch=64
# subdivisions=2
width=416
height=416
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.001
burn_in=1000
max_batches = 500200
policy=steps
steps=400000,450000
scales=.1,.1

# 0
# 输出：(-1, 16, 416, 416)
[convolutional]
batch_normalize=1
filters=16
size=3
stride=1
pad=1
activation=leaky

# 1
# 输出：(-1, 16, 208, 208)
[maxpool]
size=2
stride=2

# 2
# 输出：(-1, 32, 208, 208)
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky

# 3
# 输出：(-1, 32, 104, 104)
[maxpool]
size=2
stride=2

# 4
# 输出：(-1, 64, 104, 104)
[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky

# 5
# 输出：(-1, 64, 52, 52)
[maxpool]
size=2
stride=2

# 6
# 输出：(-1, 128, 52, 52)
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

# 7
# 输出：(-1, 128, 26, 26)
[maxpool]
size=2
stride=2

# 8
# 输出：(-1, 256, 26, 26)
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

# 9
# 输出：(-1, 256, 13, 13)
[maxpool]
size=2
stride=2

# 10
# 输出：(-1, 512, 13, 13)
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

# 11
# 输出：(-1, 512, 13, 13)
[maxpool]
size=2
stride=1

# 12
# 输出：(-1, 1024, 13, 13)
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky


###########
# 13
# 输出：(-1, 256, 13, 13)
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

# 14
# 输出：(-1, 512, 13, 13)
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

# 15; 这边的filters与预测的类别个数有关，filters = (5 + classes) * 3
# 输出：(-1, 21, 13, 13)
[convolutional]
size=1
stride=1
pad=1
filters=21
activation=linear


# =====================================================================================
# 16
# 输出：(-1, 507, 7):  507 = 13 * 13 * 3
[yolo]
mask = 3,4,5
anchors = 10,14,  23,27,  37,58,  81,82,  135,169,  344,319
classes=2
num=6
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1

# 17
# 输出：(-1, 256, 13, 13)
[route]
layers = -4

# 18
# 输出：(-1, 128, 13, 13)
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# 19
# 输出：(-1, 128, 26, 26)
[upsample]
stride=2

# 20
# 输出：(-1, 384, 26, 26)
[route]
layers = -1, 8

# 21
# 输出：(-1, 256, 13, 13)
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

# 22; 这边的filters与预测的类别个数有关，filters = (5 + classes) * 3
# 输出：(-1, 16, 416, 416)
[convolutional]
size=1
stride=1
pad=1
filters=21
activation=linear

# =====================================================================================
# 23
# 输出：(-1, 16, 416, 416)
[yolo]
mask = 1,2,3
anchors = 10,14,  23,27,  37,58,  81,82,  135,169,  344,319
classes=2
num=6
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1
