[net]
# Testing
batch=1
subdivisions=1
# Training
# batch=64
# subdivisions=16
width= 416
height = 416
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1
learning_rate=0.001
burn_in=1000
max_batches = 500200
policy=steps
steps=400000,450000
scales=.1,.1

[convolutional]
batch_normalize=1
filters=32					# 32
size=3						# 416
stride=1
pad=1
activation=leaky

# =====================================================================================
# Downsample                # 下采样

[convolutional]
batch_normalize=1
filters=64					# 64
size=3						# 208
stride=2                    # 导致尺寸变小的原因
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=32                  # 32
size=1                      # 208
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=64                  # 64
size=3                      # 208
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3                     # 表示shortcut层的输出是通过将shortcut层的前一层和前面的第三层的特征图相加得到的
activation=linear

# =====================================================================================
# Downsample                # 下采样

[convolutional]
batch_normalize=1
filters=128                 # 128
size=3                      # 104
stride=2                    # 导致尺寸变小的原因
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=64                  # 64
size=1                      # 104
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=128                 # 128
size=3                      # 104
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3                     # 表示shortcut层的输出是通过将shortcut层的前一层和前面的第三层的特征图相加得到的
activation=linear

[convolutional]
batch_normalize=1
filters=64                  # 64
size=1                      # 104
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=128                 # 128
size=3                      # 104
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3                     # 表示shortcut层的输出是通过将shortcut层的前一层和前面的第三层的特征图相加得到的
activation=linear

# =====================================================================================
# Downsample

[convolutional]
batch_normalize=1
filters=256                 # 256
size=3                      # 52
stride=2                    # 导致尺寸变小的原因
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=128                 # 128
size=1                      # 52
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256                 # 256
size=3                      # 52
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3                     # 表示shortcut层的输出是通过将shortcut层的前一层和前面的第三层的特征图相加得到的
activation=linear

[convolutional]
batch_normalize=1
filters=128                 # 128
size=1                      # 52
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256                 # 256
size=3                      # 52
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3                     # 表示shortcut层的输出是通过将shortcut层的前一层和前面的第三层的特征图相加得到的
activation=linear

[convolutional]
batch_normalize=1
filters=128                 # 128
size=1                      # 52
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256                 # 256
size=3                      # 52
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3                     # 表示shortcut层的输出是通过将shortcut层的前一层和前面的第三层的特征图相加得到的
activation=linear

[convolutional]
batch_normalize=1
filters=128                 # 128
size=1                      # 52
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256                 # 256
size=3                      # 52
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3                     # 表示shortcut层的输出是通过将shortcut层的前一层和前面的第三层的特征图相加得到的
activation=linear


[convolutional]
batch_normalize=1
filters=128
size=1                      # 52
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3                      # 52
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1                      # 52
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3                      # 52
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1                      # 52
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3                      # 52
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1                      # 52
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3                      # 52
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear

# =====================================================================================
# Downsample

[convolutional]
batch_normalize=1
filters=512                 # 512
size=3                      # 26
stride=2                    # 导致尺寸变小的原因
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1                      # 26
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3                      # 26
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear


[convolutional]
batch_normalize=1
filters=256
size=1                      # 26
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3                      # 26
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear


[convolutional]
batch_normalize=1
filters=256
size=1                      # 26
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3                      # 26
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear


[convolutional]
batch_normalize=1
filters=256
size=1                      # 26
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3                      # 26
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=256
size=1                      # 26
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3                      # 26
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear


[convolutional]
batch_normalize=1
filters=256
size=1
stride=1                    # 26
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1                    # 26
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear


[convolutional]
batch_normalize=1
filters=256
size=1
stride=1                    # 26
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1                    # 26
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1                    # 26
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512                 # 512
size=3                      # 26
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear

# =====================================================================================
# Downsample

[convolutional]
batch_normalize=1
filters=1024                # 1024
size=3
stride=2                    # 13，导致尺寸变小的原因
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=1                      # 13
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=1024
size=3                      # 13
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

[shortcut]                  # 跳过连接，类似ResNet
from=-3
activation=linear

######################

[convolutional]
batch_normalize=1
filters=512
size=1                      # 13
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3                      # 13
stride=1
pad=1
filters=1024                # 1024
activation=leaky

[convolutional]
size=1                      # 13
stride=1
pad=1
filters=255                 # 255 !!!! 255 = (80 + 5) * 3   要修改
activation=linear


# =====================================================================================
[yolo]
mask = 6,7,8                # anchors描述了9个锚，但仅使用由mask标记的属性索引的锚
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=80                  # 要修改
num=9
jitter=.3
ignore_thresh = .5
truth_thresh = 1
random=1


[route]
layers = -4                 # 只有一个值时，输出由该值索引的层的特征图。-4，因此该层将输出位于Route层前面的第4层的特征图

[convolutional]
batch_normalize=1
filters=256                 # 256
size=1                      # 13
stride=1
pad=1
activation=leaky

[upsample]                  # 前一层的特征图应用双线性上采样
stride=2                    # 26, 256


[route]
layers = -1, 61             # 有两个值时，返回由其值所索引的层的特征图的连接。-1,61，该层输出来自前一层（-1）和第61层的特征图，它们沿着深度维度进行连接


[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

[convolutional]
size=1                      # 26
stride=1
pad=1
filters=255                 # 255 !!!! 255 = (80 + 5) * 3   要修改
activation=linear


# =====================================================================================
[yolo]
mask = 3,4,5                # anchors描述了9个锚，但仅使用由mask标记的属性索引的锚
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=80                  # 要修改
num=9
jitter=.3
ignore_thresh = .5
truth_thresh = 1
random=1


[route]
layers = -4

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[upsample]                  # 前一层的特征图应用双线性上采样
stride=2

[route]
layers = -1, 36


[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=255                 # 255 !!!! 255 = (80 + 5) * 3   要修改
activation=linear


# =====================================================================================
[yolo]
mask = 0,1,2                # anchors描述了9个锚，但仅使用由mask标记的属性索引的锚
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=80                  # 要修改
num=9
jitter=.3
ignore_thresh = .5
truth_thresh = 1
random=1

